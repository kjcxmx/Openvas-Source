<!--
OpenVAS Manager
$Id$
Description: OpenVAS Manager Protocol (OMP) quick scan wizard.

Authors:
Timo Pollmeier <timo.pollmeier@greenbone.net>

Copyright:
Copyright (C) 2014 Greenbone Networks GmbH

This program is free software; you can redistribute it and/or modify
it under the terms of the GNU General Public License version 2,
or, at your option, any later version as published by the Free
Software Foundation

This program is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU General Public License for more details.

You should have received a copy of the GNU General Public License
along with this program; if not, write to the Free Software
Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.
-->

<!--
  This wizard sets up a new task and its required target.
  Optionally it can also create a schedule to run it once and
  an email alert.
 -->

<wizard>
  <params>
    <!-- ID of the config to use -->
    <param>
      <optional>0</optional>
      <name>config_id</name>
      <regex>^[a-z0-9\\-]+$</regex>
    </param>

    <!-- Email adress for alert -->
    <param>
      <optional>1</optional>
      <name>alert_email</name>
      <regex>^[^@ ]{1,150}@[^@ ]{1,150}$</regex>
    </param>

    <!-- ID of the slave to use (optional) -->
    <param>
      <optional>1</optional>
      <name>slave_id</name>
      <regex>^[a-z0-9\\-]+$</regex>
    </param>

    <!-- Auto start mode (optional).
         0: Do not start automatically
         1: Create a schedule to run once
         2: Start immediately
    -->
    <param>
      <optional>1</optional>
      <name>auto_start</name>
      <regex>^[0-2]$</regex>
    </param>

    <!-- Start time (optional) -->
    <param>
      <optional>1</optional>
      <name>start_year</name>
      <regex>^([\d]{4})$</regex>
    </param>
    <param>
      <optional>1</optional>
      <name>start_month</name>
      <regex>^0?[1-9]|1[012]$</regex>
    </param>
    <param>
      <optional>1</optional>
      <name>start_day</name>
      <regex>^0?[1-9]|[12][0-9]|3[01]$</regex>
    </param>
    <param>
      <optional>1</optional>
      <name>start_hour</name>
      <regex>^[01][0-9]|2[0-3]$</regex>
    </param>
    <param>
      <optional>1</optional>
      <name>start_minute</name>
      <regex>^[0-5][0-9]$</regex>
    </param>
    <param>
      <optional>1</optional>
      <name>start_timezone</name>
      <regex>^[0-5][0-9]$</regex>
    </param>

    <!-- Login credentials -->
    <param>
      <optional>1</optional>
      <name>smb_credential</name>
      <regex>^[a-z0-9\\-]+$</regex>
    </param>
    <param>
      <optional>1</optional>
      <name>ssh_credential</name>
      <regex>^[a-z0-9\\-]+$</regex>
    </param>
    <param>
      <optional>1</optional>
      <name>ssh_port</name>
      <regex>^0*(6553[0-5]|655[0-2]\d|65[0-4]\d\d|6[0-4]\d\d\d|[1-5]\d\d\d\d|\d{1,4})$</regex>
    </param>


    <!-- The name of the task -->
    <param>
      <optional>0</optional>
      <name>task_name</name>
      <regex>^[-_[:alnum:], \\./]{1,80}$</regex>
    </param>

    <!-- The target hosts to scan -->
    <param>
      <optional>0</optional>
      <name>target_hosts</name>
      <regex>^[-[:alnum:],: \\./]{1,2000}$</regex>
    </param>
  </params>

  <step>
    <command>
      <xsl:stylesheet
          version="1.0"
          xmlns:xsl="http://www.w3.org/1999/XSL/Transform"
          xmlns:date="http://exslt.org/dates-and-times"
          extension-element-prefixes="date">
        <xsl:output
          method="xml"
          encoding="UTF-8"/>
        <xsl:template match="/">
          <commands>
            <xsl:if test="/wizard/params/param[name='alert_email']/value != ''">
              <create_alert>
                <name>
                  <xsl:text>Email Alert for </xsl:text>
                  <xsl:value-of select="/wizard/params/param[name='task_name']/value"/>
                  <xsl:text> </xsl:text>
                  <xsl:value-of select="translate(substring (date:date-time (), 1, 19), '-:T', '')"/>
                </name>
                <comment>Automatically generated by wizard</comment>
                <condition>Always</condition>
                <event>
                  <xsl:text>Task run status changed</xsl:text>
                  <data>
                    <xsl:text>Done</xsl:text>
                    <name>status</name>
                  </data>
                </event>
                <method>
                  <xsl:text>Email</xsl:text>
                  <data>
                    <xsl:value-of select="/wizard/params/param[name='alert_email']/value"/>
                    <name>to_address</name>
                  </data>
                  <data>
                    <xsl:value-of select="/wizard/params/param[name='alert_email']/value"/>
                    <name>from_address</name>
                  </data>
                  <data>
                    <xsl:text>a3810a62-1f62-11e1-9219-406186ea4fc5</xsl:text>
                    <name>notice_report_format</name>
                  </data>
                  <data>
                    <xsl:text>0</xsl:text>
                    <name>notice</name>
                  </data>
                </method>
              </create_alert>
            </xsl:if>

            <xsl:if test="(/wizard/params/param[name='auto_start']/value = 1) and (/wizard/params/param[name='start_year']/value != '') and (/wizard/params/param[name='start_month']/value != '') and (/wizard/params/param[name='start_day']/value != '') and (/wizard/params/param[name='start_hour']/value != '') and (/wizard/params/param[name='start_minute']/value != '')">
              <create_schedule>
                <name>
                  <xsl:text>Schedule for </xsl:text>
                  <xsl:value-of select="/wizard/params/param[name='task_name']/value"/>
                  <xsl:text> </xsl:text>
                  <xsl:value-of select="translate(substring (date:date-time (), 1, 19), '-:T', '')"/>
                </name>
                <comment>Automatically generated by wizard</comment>
                <first_time>
                  <year><xsl:value-of select="/wizard/params/param[name='start_year']/value"/></year>
                  <month><xsl:value-of select="/wizard/params/param[name='start_month']/value"/></month>
                  <day_of_month><xsl:value-of select="/wizard/params/param[name='start_day']/value"/></day_of_month>
                  <hour><xsl:value-of select="/wizard/params/param[name='start_hour']/value"/></hour>
                  <minute><xsl:value-of select="/wizard/params/param[name='start_minute']/value"/></minute>
                </first_time>
              </create_schedule>
            </xsl:if>

            <create_target>
              <name><make_unique>1</make_unique>Target for <xsl:value-of select="/wizard/params/param[name='task_name']/value"/></name>
              <comment>Automatically generated by wizard</comment>
              <hosts><xsl:value-of select="/wizard/params/param[name='target_hosts']/value"/></hosts>

              <xsl:if test="/wizard/params/param[name='ssh_credential']/value != ''">
                <ssh_lsc_credential id="{/wizard/params/param[name='ssh_credential']/value}">
                  <port>
                    <xsl:choose>
                      <xsl:when test="/wizard/params/param[name='ssh_port']/value != ''">
                        <xsl:value-of select="/wizard/params/param[name='ssh_port']/value"/>
                      </xsl:when>
                      <xsl:otherwise>22</xsl:otherwise>
                    </xsl:choose>
                  </port>
                </ssh_lsc_credential>
              </xsl:if>
              <xsl:if test="/wizard/params/param[name='smb_credential']/value != ''">
                <smb_lsc_credential id="{/wizard/params/param[name='smb_credential']/value}"/>
              </xsl:if>
            </create_target>
          </commands>
        </xsl:template>
      </xsl:stylesheet>
    </command>
  </step>

  <step>
    <command>
      <xsl:stylesheet
          version="1.0"
          xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
        <xsl:output
          method="xml"
          encoding="UTF-8"/>
        <xsl:template match="/">
          <create_task>
            <name><xsl:value-of select="/wizard/params/param[name='task_name']/value"/></name>
            <comment>Automatically generated by  wizard</comment>
            <config id="{/wizard/params/param[name='config_id']/value}"/>
            <target id="{/wizard/previous/response/commands_response/create_target_response/@id}"/>

            <xsl:if test="/wizard/previous/response/commands_response/create_alert_response/@id != ''">
              <alert id="{/wizard/previous/response/commands_response/create_alert_response/@id}"/>
            </xsl:if>

            <xsl:if test="/wizard/previous/response/commands_response/create_schedule_response/@id != ''">
              <schedule id="{/wizard/previous/response/commands_response/create_schedule_response/@id}"/>
            </xsl:if>

            <xsl:if test="/wizard/params/param[name='slave_id']/value != ''">
              <slave id="{/wizard/params/param[name='slave_id']/value}"/>
            </xsl:if>
          </create_task>
        </xsl:template>
      </xsl:stylesheet>
    </command>
  </step>

  <step>
    <command>
      <xsl:stylesheet
            version="1.0"
            xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
        <xsl:output
          method="xml"
          encoding="UTF-8"/>
        <xsl:template match="/">
          <xsl:choose>
            <xsl:when test="/wizard/params/param[name='auto_start']/value = 2">
              <start_task task_id="{/wizard/previous/response/create_task_response/@id}"/>
            </xsl:when>
            <xsl:otherwise>
              <get_tasks task_id="{/wizard/previous/response/create_task_response/@id}"/>
            </xsl:otherwise>
          </xsl:choose>
        </xsl:template>
      </xsl:stylesheet>
    </command>
  </step>

  <mode>
    <name>init</name>
    <read_only>1</read_only>
    <step>
      <command>
        <xsl:stylesheet
            version="1.0"
            xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
          <xsl:output
            method="xml"
            encoding="UTF-8"/>
          <xsl:template match="/">
            <help format="xml" type="brief"/>
          </xsl:template>
        </xsl:stylesheet>
      </command>
    </step>
    <step>
      <command>
        <xsl:stylesheet
            version="1.0"
            xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
          <xsl:output
            method="xml"
            encoding="UTF-8"/>
          <xsl:template match="/">
            <commands>
              <get_configs details="0"/>
              <xsl:if test="count(/wizard/previous/response/help_response/schema/command[name = 'GET_SLAVES'])">
                <get_slaves details="0"/>
              </xsl:if>
              <get_lsc_credentials details="0"/>
            </commands>
          </xsl:template>
        </xsl:stylesheet>
      </command>
    </step>
  </mode>
</wizard>